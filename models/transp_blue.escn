[gd_scene load_steps=1 format=2]

[sub_resource id=1 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;



void node_emission(vec4 emission_color, float strength,
        out vec3 emission_out, out float alpha_out) {
    emission_out = emission_color.rgb * strength;
    alpha_out = emission_color.a;
}

void vertex () {
}

void fragment () {
	
	// node: 'Emission'
	// type: 'ShaderNodeEmission'
	// input sockets handling
	vec4 node0_in0_color = vec4(0.0, 0.05868590250611305, 0.5428570508956909, 1.0);
	float node0_in1_strength = float(10.0);
	// output sockets definitions
	float node0_emission_out1_alpha;
	vec3 node0_emission_out0_emission;
	
	node_emission(node0_in0_color, node0_in1_strength, node0_emission_out0_emission,
		node0_emission_out1_alpha);
	
	
	EMISSION = node0_emission_out0_emission;
}
"

[sub_resource id=2 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(1)

[sub_resource id=3 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;



void node_bsdf_transparent(vec4 color, out float alpha) {
    alpha = clamp(1.0 - dot(color.rgb, vec3(0.3333334)), 0.0, 1.0);
}

void vertex () {
}

void fragment () {
	
	// node: 'Transparent BSDF'
	// type: 'ShaderNodeBsdfTransparent'
	// input sockets handling
	vec4 node0_in0_color = vec4(0.21404114365577698, 0.21404114365577698,
		0.21404114365577698, 1.0);
	// output sockets definitions
	float node0_bsdf_out0_alpha;
	
	node_bsdf_transparent(node0_in0_color, node0_bsdf_out0_alpha);
	
	
	EMISSION += textureLod(SCREEN_TEXTURE, SCREEN_UV, ROUGHNESS).rgb * (1.0 -
		node0_bsdf_out0_alpha);
	ALBEDO *= node0_bsdf_out0_alpha;
	ALPHA = 1.0;
}
"

[sub_resource id=4 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(3)

[sub_resource id=5 type="ArrayMesh"]

resource_name = "Cube002"
surfaces/0 = {
	"material":SubResource(2),
	"primitive":4,
	"arrays":[
		Vector3Array(-1.0, 1.0, 0.9, -0.9, 1.0, 1.0, -0.9, 1.0, 0.9, -0.9, 1.0, -1.0, -1.0, 1.0, -0.9, -0.9, 1.0, -0.9, -1.0, 0.9, 0.9, -1.0, 1.0, 1.0, -1.0, 1.0, 0.9, 1.0, -0.9, -0.9, 1.0, -1.0, -1.0, 1.0, -0.9, -1.0, 1.0, -0.9, -1.0, 0.9, -1.0, -1.0, 0.9, -0.9, -1.0, 1.0, 0.9, 0.9, 1.0, -0.9, 1.0, 1.0, -0.9, 0.9, 0.9, -0.9, 1.0, 1.0, -1.0, 1.0, 1.0, -0.9, 1.0, 1.0, -1.0, -0.9, 0.9, 1.0, 0.9, 1.0, 1.0, -0.9, 0.9, 1.0, -0.9, -0.9, -1.0, -1.0, -0.9, -0.9, -1.0, 1.0, 0.9, -0.9, 1.0, 1.0, 0.9, 0.9, 1.0, -1.0, -1.0, -0.9, 0.9, -1.0, 0.9, 1.0, 0.9, 0.9, -1.0, -0.9, 0.9, -1.0, 0.9, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 0.9, -1.0, -1.0, -0.9, 1.0, -0.9, -1.0, 1.0, -0.9, -0.9, 1.0, 1.0, 0.9, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -0.9, -1.0, 1.0, -0.9, -1.0, 0.9, -1.0, -1.0, 0.9, -0.9, -1.0, -0.9, -1.0, -1.0, -0.9, -0.9, -1.0, 0.9, -1.0, -1.0, 1.0, -1.0, -0.9, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, -1.0, 0.9, -0.9, 0.9, 1.0, 1.0, 0.9, 1.0, 0.9, 0.9, 1.0, -0.9, 1.0, 1.0, 0.9, 1.0, 1.0, -1.0, 0.9, 1.0, -1.0, -1.0, -0.9, 0.9, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -0.9, -1.0, 1.0, 0.9, 1.0, -0.9, -1.0, 0.9, -1.0, -1.0, 1.0, -1.0, -1.0, 0.9, 0.9, -1.0, -0.9, 1.0, -1.0, 0.9, 0.9, -1.0, 0.9, 1.0, -1.0, -1.0, 1.0, -1.0, -0.9, -0.9, -1.0, -0.9, 0.9, -1.0, -1.0, -1.0, -1.0, -0.9, -1.0, -1.0, -1.0, -0.9, -1.0, -1.0, 0.9, -1.0, 1.0, -0.9, -1.0, 1.0, 0.9, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -0.9, 1.0, -1.0, -1.0, 0.9, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0),
		Vector3Array(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -1.0, 0.0),
		FloatArray(1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.875, 0.25, 0.875, 0.25, 0.875, 0.25, 0.875, 0.5, 0.875, 0.5, 0.875, 0.5, 0.625, 1.0, 0.625, 1.0, 0.625, 1.0, 0.375, 0.5, 0.375, 0.5, 0.375, 0.5, 0.375, 0.5, 0.375, 0.5, 0.375, 0.5, 0.625, 0.25, 0.375, 0.25, 0.375, 0.25, 0.375, 0.25, 0.375, 0.25, 0.375, 0.25, 0.375, 0.5, 0.625, 0.25, 0.625, 0.5, 0.625, 0.5, 0.375, 0.75, 0.375, 0.75, 0.625, 0.5, 0.625, 0.25, 0.625, 0.5, 0.375, 1.0, 0.625, 1.0, 0.625, 0.5, 0.625, 0.75, 0.625, 0.5, 0.625, 0.5, 0.625, 0.5, 0.375, 0.0, 0.375, 0.0, 0.375, 0.0, 0.625, 0.5, 0.625, 0.5, 0.625, 0.5, 0.625, 0.75, 0.625, 0.75, 0.625, 0.75, 0.375, 0.75, 0.375, 0.75, 0.625, 0.75, 0.625, 0.75, 0.625, 0.75, 0.625, 0.25, 0.625, 0.25, 0.375, 0.25, 0.625, 0.0, 0.625, 0.25, 0.625, 0.25, 0.625, 0.0, 0.625, 0.25, 0.625, 0.0, 0.375, 0.75, 0.625, 0.25, 0.375, 0.75, 0.375, 0.75, 0.625, 0.25, 0.125, 0.25, 0.125, 0.25, 0.125, 0.25, 0.375, 0.5, 0.375, 0.25, 0.375, 0.25, 0.375, 0.5, 0.375, 0.5, 0.125, 0.5, 0.375, 0.5, 0.125, 0.5, 0.125, 0.5, 0.125, 0.5, 0.375, 0.25, 0.125, 0.25, 0.375, 0.25, 0.375, 1.0, 0.375, 1.0, 0.375, 1.0, 0.875, 0.25, 0.875, 0.5, 0.375, 0.5, 0.625, 0.5, 0.375, 0.0, 0.625, 0.75, 0.375, 0.25, 0.625, 0.25, 0.625, 0.0, 0.375, 0.75, 0.625, 0.25, 0.375, 0.25),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 9, 11, 10, 12, 14, 13, 15, 17, 16, 18, 20, 19, 5, 2, 0, 17, 9, 21, 22, 24, 23, 14, 26, 25, 27, 15, 28, 23, 24, 29, 30, 6, 31, 32, 14, 12, 33, 32, 34, 32, 36, 35, 37, 39, 38, 9, 27, 40, 24, 5, 3, 27, 42, 41, 43, 45, 44, 6, 45, 43, 45, 47, 46, 26, 33, 48, 33, 50, 49, 22, 52, 51, 16, 17, 53, 54, 39, 37, 18, 56, 55, 56, 54, 57, 55, 56, 58, 57, 54, 59, 46, 47, 60, 2, 22, 61, 26, 63, 62, 28, 15, 64, 65, 67, 66, 68, 70, 69, 68, 72, 71, 73, 68, 74, 65, 73, 75, 73, 77, 76, 69, 70, 78, 70, 65, 79, 39, 18, 80, 30, 82, 81, 47, 30, 83, 0, 1, 84, 3, 4, 85, 6, 7, 31, 9, 10, 21, 12, 13, 86, 15, 16, 64, 18, 19, 80, 5, 0, 4, 17, 21, 53, 22, 23, 52, 14, 25, 13, 27, 28, 42, 23, 29, 87, 30, 31, 82, 32, 12, 36, 33, 34, 50, 32, 35, 34, 37, 38, 88, 9, 40, 11, 24, 3, 29, 27, 41, 40, 43, 44, 89, 6, 43, 8, 45, 46, 44, 26, 48, 63, 33, 49, 48, 22, 51, 61, 16, 53, 90, 54, 37, 59, 18, 55, 20, 56, 57, 58, 55, 58, 91, 57, 59, 92, 46, 60, 93, 2, 61, 1, 26, 62, 25, 28, 64, 94, 65, 66, 79, 68, 69, 72, 68, 71, 74, 73, 74, 77, 65, 75, 67, 73, 76, 75, 69, 78, 95, 70, 79, 78, 39, 80, 38, 30, 81, 83, 47, 83, 60)
	],
	"morph_arrays":[]
}
surfaces/1 = {
	"material":SubResource(4),
	"primitive":4,
	"arrays":[
		Vector3Array(1.0, 0.9, -0.9, 1.0, -0.9, 0.9, 1.0, -0.9, -0.9, -0.9, 1.0, -0.9, 0.9, 1.0, 0.9, 0.9, 1.0, -0.9, -0.9, 0.9, -1.0, 0.9, -0.9, -1.0, -0.9, -0.9, -1.0, -1.0, 0.9, 0.9, -1.0, -0.9, -0.9, -1.0, -0.9, 0.9, 0.9, 0.9, 1.0, -0.9, -0.9, 1.0, 0.9, -0.9, 1.0, 0.9, -1.0, -0.9, -0.9, -1.0, 0.9, -0.9, -1.0, -0.9, 1.0, 0.9, 0.9, -0.9, 1.0, 0.9, 0.9, 0.9, -1.0, -1.0, 0.9, -0.9, -0.9, 0.9, 1.0, 0.9, -1.0, 0.9),
		Vector3Array(1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -1.0, 0.0),
		FloatArray(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.625, 0.5, 0.375, 0.25, 0.375, 0.5, 0.875, 0.5, 0.625, 0.25, 0.625, 0.5, 0.625, 0.75, 0.375, 0.5, 0.375, 0.75, 0.625, 1.0, 0.375, 0.75, 0.375, 1.0, 0.625, 0.25, 0.375, 0.0, 0.375, 0.25, 0.375, 0.5, 0.125, 0.25, 0.125, 0.5, 0.625, 0.25, 0.875, 0.25, 0.625, 0.5, 0.625, 0.75, 0.625, 0.0, 0.375, 0.25),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 9, 11, 10, 12, 14, 13, 15, 17, 16, 0, 1, 18, 3, 4, 19, 6, 7, 20, 9, 10, 21, 12, 13, 22, 15, 16, 23)
	],
	"morph_arrays":[]
}

[node type="Spatial" name="Scene"]

[node name="Cube" type="MeshInstance" parent="."]

mesh = SubResource(5)
visible = true
transform = Transform(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)
