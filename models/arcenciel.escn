[gd_scene load_steps=1 format=2]

[sub_resource id=1 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;



void node_emission(vec4 emission_color, float strength,
        out vec3 emission_out, out float alpha_out) {
    emission_out = emission_color.rgb * strength;
    alpha_out = emission_color.a;
}

void vertex () {
}

void fragment () {
	
	// node: 'Emission'
	// type: 'ShaderNodeEmission'
	// input sockets handling
	vec4 node0_in0_color = vec4(1.0, 0.0, 0.0, 1.0);
	float node0_in1_strength = float(2.0);
	// output sockets definitions
	float node0_emission_out1_alpha;
	vec3 node0_emission_out0_emission;
	
	node_emission(node0_in0_color, node0_in1_strength, node0_emission_out0_emission,
		node0_emission_out1_alpha);
	
	
	EMISSION = node0_emission_out0_emission;
}
"

[sub_resource id=2 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(1)

[sub_resource id=3 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;



void node_emission(vec4 emission_color, float strength,
        out vec3 emission_out, out float alpha_out) {
    emission_out = emission_color.rgb * strength;
    alpha_out = emission_color.a;
}

void vertex () {
}

void fragment () {
	
	// node: 'Emission'
	// type: 'ShaderNodeEmission'
	// input sockets handling
	vec4 node0_in0_color = vec4(0.0, 0.09843747317790985, 1.0, 1.0);
	float node0_in1_strength = float(2.0);
	// output sockets definitions
	float node0_emission_out1_alpha;
	vec3 node0_emission_out0_emission;
	
	node_emission(node0_in0_color, node0_in1_strength, node0_emission_out0_emission,
		node0_emission_out1_alpha);
	
	
	EMISSION = node0_emission_out0_emission;
}
"

[sub_resource id=4 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(3)

[sub_resource id=5 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;



void node_emission(vec4 emission_color, float strength,
        out vec3 emission_out, out float alpha_out) {
    emission_out = emission_color.rgb * strength;
    alpha_out = emission_color.a;
}

void vertex () {
}

void fragment () {
	
	// node: 'Emission'
	// type: 'ShaderNodeEmission'
	// input sockets handling
	vec4 node0_in0_color = vec4(1.0, 0.15197309851646423, 0.012257401831448078, 1.0);
	float node0_in1_strength = float(2.0);
	// output sockets definitions
	float node0_emission_out1_alpha;
	vec3 node0_emission_out0_emission;
	
	node_emission(node0_in0_color, node0_in1_strength, node0_emission_out0_emission,
		node0_emission_out1_alpha);
	
	
	EMISSION = node0_emission_out0_emission;
}
"

[sub_resource id=6 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(5)

[sub_resource id=7 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;



void node_emission(vec4 emission_color, float strength,
        out vec3 emission_out, out float alpha_out) {
    emission_out = emission_color.rgb * strength;
    alpha_out = emission_color.a;
}

void vertex () {
}

void fragment () {
	
	// node: 'Emission'
	// type: 'ShaderNodeEmission'
	// input sockets handling
	vec4 node0_in0_color = vec4(1.0, 0.8802992701530457, 0.0, 1.0);
	float node0_in1_strength = float(2.0);
	// output sockets definitions
	float node0_emission_out1_alpha;
	vec3 node0_emission_out0_emission;
	
	node_emission(node0_in0_color, node0_in1_strength, node0_emission_out0_emission,
		node0_emission_out1_alpha);
	
	
	EMISSION = node0_emission_out0_emission;
}
"

[sub_resource id=8 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(7)

[sub_resource id=9 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;



void node_emission(vec4 emission_color, float strength,
        out vec3 emission_out, out float alpha_out) {
    emission_out = emission_color.rgb * strength;
    alpha_out = emission_color.a;
}

void vertex () {
}

void fragment () {
	
	// node: 'Emission'
	// type: 'ShaderNodeEmission'
	// input sockets handling
	vec4 node0_in0_color = vec4(0.0, 1.0, 0.0047334651462733746, 1.0);
	float node0_in1_strength = float(2.0);
	// output sockets definitions
	float node0_emission_out1_alpha;
	vec3 node0_emission_out0_emission;
	
	node_emission(node0_in0_color, node0_in1_strength, node0_emission_out0_emission,
		node0_emission_out1_alpha);
	
	
	EMISSION = node0_emission_out0_emission;
}
"

[sub_resource id=10 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(9)

[sub_resource id=11 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;



void node_emission(vec4 emission_color, float strength,
        out vec3 emission_out, out float alpha_out) {
    emission_out = emission_color.rgb * strength;
    alpha_out = emission_color.a;
}

void vertex () {
}

void fragment () {
	
	// node: 'Emission'
	// type: 'ShaderNodeEmission'
	// input sockets handling
	vec4 node0_in0_color = vec4(0.0, 1.0, 0.9458943605422974, 1.0);
	float node0_in1_strength = float(1.0);
	// output sockets definitions
	float node0_emission_out1_alpha;
	vec3 node0_emission_out0_emission;
	
	node_emission(node0_in0_color, node0_in1_strength, node0_emission_out0_emission,
		node0_emission_out1_alpha);
	
	
	EMISSION = node0_emission_out0_emission;
}
"

[sub_resource id=12 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(11)

[sub_resource id=13 type="ArrayMesh"]

resource_name = "Cube"
surfaces/0 = {
	"material":SubResource(2),
	"primitive":4,
	"arrays":[
		Vector3Array(-1.0, 1.0, -1.0, -0.666667, 1.0, 1.0, -0.666667, 1.0, -1.0, -0.666667, 1.0, 1.0, -1.0, -1.0, 1.0, -0.666667, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -0.666667, -1.0, -1.0, -1.0, -1.0, -1.0, -0.666667, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -0.666667, 1.0, -1.0, -0.666667, -1.0, 1.0),
		Vector3Array(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0),
		FloatArray(-1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.27425e-08, 1.0, 0.0, 1.0, -2.6669e-08, 1.0, 0.0, 1.0, -3.60779e-08, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 3.00026e-08, 1.0, 0.0, 1.0, 1.66637e-08, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, -1.16721e-08, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.875, 0.5, 0.833333, 0.25, 0.833333, 0.5, 0.625, 0.0416666, 0.375, 0.0, 0.375, 0.0416666, 0.625, 1.0, 0.375, 0.75, 0.375, 1.0, 0.625, 0.75, 0.375, 0.708333, 0.375, 0.75, 0.166667, 0.5, 0.125, 0.25, 0.125, 0.5, 0.875, 0.25, 0.625, 0.0, 0.625, 0.75, 0.625, 0.708333, 0.166667, 0.25),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 9, 11, 10, 12, 14, 13, 0, 1, 15, 3, 4, 16, 6, 7, 17, 9, 10, 18, 12, 13, 19)
	],
	"morph_arrays":[]
}
surfaces/1 = {
	"material":SubResource(4),
	"primitive":4,
	"arrays":[
		Vector3Array(1.0, -1.0, -1.0, 0.666667, -1.0, 1.0, 0.666667, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.666667, 1.0, -1.0, 1.0, -1.0, -1.0, 0.666667, -1.0, -1.0, 1.0, 1.0, 1.0, 0.666667, -1.0, 1.0, 1.0, -1.0, 1.0, 0.666667, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 0.666667, 1.0, 1.0, 0.666667, 1.0, 1.0),
		Vector3Array(0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0),
		FloatArray(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.83305e-08, 1.0, 0.0, 1.0, 2.6669e-08, 1.0, 0.0, 1.0, 3.66654e-08, 1.0, 0.0, 1.0, 4.00034e-07, 1.0, 0.0, 1.0, 2.47017e-07, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 2.27015e-07, 1.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.375, 0.5, 0.333333, 0.25, 0.333333, 0.5, 0.625, 0.5, 0.375, 0.25, 0.375, 0.5, 0.625, 0.541667, 0.375, 0.5, 0.375, 0.541667, 0.625, 0.25, 0.375, 0.208333, 0.375, 0.25, 0.666667, 0.5, 0.625, 0.25, 0.625, 0.5, 0.375, 0.25, 0.625, 0.25, 0.625, 0.5, 0.625, 0.208333, 0.666667, 0.25),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 9, 11, 10, 12, 14, 13, 0, 1, 15, 3, 4, 16, 6, 7, 17, 9, 10, 18, 12, 13, 19)
	],
	"morph_arrays":[]
}
surfaces/2 = {
	"material":SubResource(6),
	"primitive":4,
	"arrays":[
		Vector3Array(-0.666667, 1.0, -1.0, -0.333333, -1.0, -1.0, -0.666667, -1.0, -1.0, -0.333333, -1.0, -1.0, -0.666667, -1.0, 1.0, -0.666667, -1.0, -1.0, -0.333333, 1.0, 1.0, -0.666667, -1.0, 1.0, -0.333333, -1.0, 1.0, -0.666667, 1.0, -1.0, -0.333333, 1.0, 1.0, -0.333333, 1.0, -1.0, -0.333333, 1.0, -1.0, -0.333333, -1.0, 1.0, -0.666667, 1.0, 1.0, -0.666667, 1.0, 1.0),
		Vector3Array(0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0),
		FloatArray(-1.16721e-08, 1.0, 0.0, 1.0, -2.74434e-08, 1.0, 0.0, 1.0, 1.66637e-08, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, -3.47026e-08, 1.0, 0.0, 1.0, -3.60779e-08, 1.0, 0.0, 1.0, -3.80362e-08, 1.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -2.74434e-08, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, -1.27425e-08, 1.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.625, 0.708333, 0.375, 0.666667, 0.375, 0.708333, 0.208333, 0.5, 0.166667, 0.25, 0.166667, 0.5, 0.625, 0.0833334, 0.375, 0.0416666, 0.375, 0.0833334, 0.833333, 0.5, 0.791667, 0.25, 0.791667, 0.5, 0.625, 0.666667, 0.208333, 0.25, 0.625, 0.0416666, 0.833333, 0.25),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 9, 11, 10, 0, 1, 12, 3, 4, 13, 6, 7, 14, 9, 10, 15)
	],
	"morph_arrays":[]
}
surfaces/3 = {
	"material":SubResource(8),
	"primitive":4,
	"arrays":[
		Vector3Array(-0.333333, 1.0, -1.0, -2.98023e-08, -1.0, -1.0, -0.333333, -1.0, -1.0, -2.98023e-08, -1.0, -1.0, -0.333333, -1.0, 1.0, -0.333333, -1.0, -1.0, -2.98023e-08, 1.0, 1.0, -0.333333, -1.0, 1.0, 2.98023e-08, -1.0, 1.0, -0.333333, 1.0, -1.0, -2.98023e-08, 1.0, 1.0, 2.98023e-08, 1.0, -1.0, 2.98023e-08, 1.0, -1.0, 2.98023e-08, -1.0, 1.0, -0.333333, 1.0, 1.0, -0.333333, 1.0, 1.0),
		Vector3Array(0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0),
		FloatArray(-2.74434e-08, 1.0, 0.0, 1.0, -1.72601e-08, 1.0, 0.0, 1.0, -2.74434e-08, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, -3.83323e-08, 1.0, 0.0, 1.0, -3.80362e-08, 1.0, 0.0, 1.0, -3.66654e-08, 1.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 3.27443e-08, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, -3.47026e-08, 1.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.625, 0.666667, 0.375, 0.625, 0.375, 0.666667, 0.25, 0.5, 0.208333, 0.25, 0.208333, 0.5, 0.625, 0.125, 0.375, 0.0833334, 0.375, 0.125, 0.791667, 0.5, 0.75, 0.25, 0.75, 0.5, 0.625, 0.625, 0.25, 0.25, 0.625, 0.0833334, 0.791667, 0.25),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 9, 11, 10, 0, 1, 12, 3, 4, 13, 6, 7, 14, 9, 10, 15)
	],
	"morph_arrays":[]
}
surfaces/4 = {
	"material":SubResource(10),
	"primitive":4,
	"arrays":[
		Vector3Array(2.98023e-08, 1.0, -1.0, 0.333333, -1.0, -1.0, -2.98023e-08, -1.0, -1.0, 0.333333, -1.0, -1.0, 2.98023e-08, -1.0, 1.0, -2.98023e-08, -1.0, -1.0, 0.333333, 1.0, 1.0, 2.98023e-08, -1.0, 1.0, 0.333333, -1.0, 1.0, 2.98023e-08, 1.0, -1.0, 0.333333, 1.0, 1.0, 0.333333, 1.0, -1.0, 0.333333, 1.0, -1.0, 0.333333, -1.0, 1.0, -2.98023e-08, 1.0, 1.0, -2.98023e-08, 1.0, 1.0),
		Vector3Array(0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0),
		FloatArray(3.27443e-08, 1.0, 0.0, 1.0, 3.80362e-08, 1.0, 0.0, 1.0, -1.72601e-08, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, -3.97031e-08, 1.0, 0.0, 1.0, -3.66654e-08, 1.0, 0.0, 1.0, 1.75315e-07, 1.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 3.97031e-08, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, -3.83323e-08, 1.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.625, 0.625, 0.375, 0.583333, 0.375, 0.625, 0.291667, 0.5, 0.25, 0.25, 0.25, 0.5, 0.625, 0.166667, 0.375, 0.125, 0.375, 0.166667, 0.75, 0.5, 0.708333, 0.25, 0.708333, 0.5, 0.625, 0.583333, 0.291667, 0.25, 0.625, 0.125, 0.75, 0.25),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 9, 11, 10, 0, 1, 12, 3, 4, 13, 6, 7, 14, 9, 10, 15)
	],
	"morph_arrays":[]
}
surfaces/5 = {
	"material":SubResource(12),
	"primitive":4,
	"arrays":[
		Vector3Array(0.333333, 1.0, -1.0, 0.666667, -1.0, -1.0, 0.333333, -1.0, -1.0, 0.666667, -1.0, -1.0, 0.333333, -1.0, 1.0, 0.333333, -1.0, -1.0, 0.666667, 1.0, 1.0, 0.333333, -1.0, 1.0, 0.666667, -1.0, 1.0, 0.333333, 1.0, -1.0, 0.666667, 1.0, 1.0, 0.666667, 1.0, -1.0, 0.666667, 1.0, -1.0, 0.666667, -1.0, 1.0, 0.333333, 1.0, 1.0, 0.333333, 1.0, 1.0),
		Vector3Array(0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0),
		FloatArray(3.97031e-08, 1.0, 0.0, 1.0, 3.66654e-08, 1.0, 0.0, 1.0, 3.80362e-08, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 2.27015e-07, 1.0, 0.0, 1.0, 1.75315e-07, 1.0, 0.0, 1.0, 2.47017e-07, 1.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 1.83305e-08, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, -3.97031e-08, 1.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.625, 0.583333, 0.375, 0.541667, 0.375, 0.583333, 0.333333, 0.5, 0.291667, 0.25, 0.291667, 0.5, 0.625, 0.208333, 0.375, 0.166667, 0.375, 0.208333, 0.708333, 0.5, 0.666667, 0.25, 0.666667, 0.5, 0.625, 0.541667, 0.333333, 0.25, 0.625, 0.166667, 0.708333, 0.25),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 9, 11, 10, 0, 1, 12, 3, 4, 13, 6, 7, 14, 9, 10, 15)
	],
	"morph_arrays":[]
}

[node type="Spatial" name="Scene"]

[node name="Cube" type="MeshInstance" parent="."]

mesh = SubResource(13)
visible = true
transform = Transform(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)
