[gd_scene load_steps=1 format=2]

[sub_resource id=1 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;



void node_bsdf_principled(vec4 color, float subsurface, vec4 subsurface_color,
        float metallic, float specular, float roughness, float clearcoat,
        float clearcoat_roughness, float anisotropy, float transmission,
        float IOR, out vec3 albedo, out float sss_strength_out,
        out float metallic_out, out float specular_out,
        out float roughness_out, out float clearcoat_out,
        out float clearcoat_gloss_out, out float anisotropy_out,
        out float transmission_out, out float ior) {
    metallic = clamp(metallic, 0.0, 1.0);
    transmission = clamp(transmission, 0.0, 1.0);

    subsurface = subsurface * (1.0 - metallic);

    albedo = mix(color.rgb, subsurface_color.rgb, subsurface);
    sss_strength_out = subsurface;
    metallic_out = metallic;
    specular_out = pow((IOR - 1.0)/(IOR + 1.0), 2)/0.08;
    roughness_out = roughness;
    clearcoat_out = clearcoat * (1.0 - transmission);
    clearcoat_gloss_out = 1.0 - clearcoat_roughness;
    anisotropy_out = clamp(anisotropy, 0.0, 1.0);
    transmission_out = (1.0 - transmission) * (1.0 - metallic);
    ior = IOR;
}

void vertex () {
}

void fragment () {
	
	// node: 'Principled BSDF'
	// type: 'ShaderNodeBsdfPrincipled'
	// input sockets handling
	vec4 node0_in0_basecolor = vec4(0.09850435703992844, 0.09850435703992844,
		0.09850435703992844, 1.0);
	float node0_in1_subsurface = float(0.0);
	vec3 node0_in2_subsurfaceradius = vec3(1.0, 0.20000000298023224,
		0.10000000149011612);
	vec4 node0_in3_subsurfacecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node0_in4_metallic = float(1.0);
	float node0_in5_specular = float(0.5);
	float node0_in6_speculartint = float(0.0);
	float node0_in7_roughness = float(0.5);
	float node0_in8_anisotropic = float(0.0);
	float node0_in9_anisotropicrotation = float(0.0);
	float node0_in10_sheen = float(0.0);
	float node0_in11_sheentint = float(0.5);
	float node0_in12_clearcoat = float(0.0);
	float node0_in13_clearcoatroughness = float(0.029999999329447746);
	float node0_in14_ior = float(1.4500000476837158);
	float node0_in15_transmission = float(0.0);
	float node0_in16_transmissionroughness = float(0.0);
	vec4 node0_in17_emission = vec4(0.0, 0.0, 0.0, 1.0);
	float node0_in18_alpha = float(1.0);
	vec3 node0_in19_normal = NORMAL;
	vec3 node0_in20_clearcoatnormal = vec3(0.0, 0.0, 0.0);
	vec3 node0_in21_tangent = TANGENT;
	// output sockets definitions
	vec3 node0_bsdf_out0_albedo;
	float node0_bsdf_out1_sss_strength;
	float node0_bsdf_out3_specular;
	float node0_bsdf_out2_metallic;
	float node0_bsdf_out4_roughness;
	float node0_bsdf_out5_clearcoat;
	float node0_bsdf_out6_clearcoat_gloss;
	float node0_bsdf_out7_anisotropy;
	float node0_bsdf_out8_transmission;
	float node0_bsdf_out9_ior;
	
	node_bsdf_principled(node0_in0_basecolor, node0_in1_subsurface,
		node0_in3_subsurfacecolor, node0_in4_metallic, node0_in5_specular,
		node0_in7_roughness, node0_in12_clearcoat, node0_in13_clearcoatroughness,
		node0_in8_anisotropic, node0_in15_transmission, node0_in14_ior,
		node0_bsdf_out0_albedo, node0_bsdf_out1_sss_strength, node0_bsdf_out2_metallic,
		node0_bsdf_out3_specular, node0_bsdf_out4_roughness, node0_bsdf_out5_clearcoat,
		node0_bsdf_out6_clearcoat_gloss, node0_bsdf_out7_anisotropy,
		node0_bsdf_out8_transmission, node0_bsdf_out9_ior);
	
	
	ALBEDO = node0_bsdf_out0_albedo;
	SSS_STRENGTH = node0_bsdf_out1_sss_strength;
	SPECULAR = node0_bsdf_out3_specular;
	METALLIC = node0_bsdf_out2_metallic;
	ROUGHNESS = node0_bsdf_out4_roughness;
	CLEARCOAT = node0_bsdf_out5_clearcoat;
	CLEARCOAT_GLOSS = node0_bsdf_out6_clearcoat_gloss;
	NORMAL = node0_in19_normal;
	// uncomment it when you need it
	// TRANSMISSION = vec3(1.0, 1.0, 1.0) * node0_bsdf_out8_transmission;
	// uncomment it when you are modifing TANGENT
	// TANGENT = normalize(cross(cross(node0_in21_tangent, NORMAL), NORMAL));
	// BINORMAL = cross(TANGENT, NORMAL);
	// uncomment it when you have tangent(UV) set
	// ANISOTROPY = node0_bsdf_out7_anisotropy;
}
"

[sub_resource id=2 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(1)

[sub_resource id=3 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;



void node_emission(vec4 emission_color, float strength,
        out vec3 emission_out, out float alpha_out) {
    emission_out = emission_color.rgb * strength;
    alpha_out = emission_color.a;
}

void vertex () {
}

void fragment () {
	
	// node: 'Emission'
	// type: 'ShaderNodeEmission'
	// input sockets handling
	vec4 node0_in0_color = vec4(1.0, 0.0008212151587940753, 0.0, 1.0);
	float node0_in1_strength = float(5.0);
	// output sockets definitions
	float node0_emission_out1_alpha;
	vec3 node0_emission_out0_emission;
	
	node_emission(node0_in0_color, node0_in1_strength, node0_emission_out0_emission,
		node0_emission_out1_alpha);
	
	
	EMISSION = node0_emission_out0_emission;
}
"

[sub_resource id=4 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(3)

[sub_resource id=5 type="ArrayMesh"]

resource_name = "Cube"
surfaces/0 = {
	"material":SubResource(2),
	"primitive":4,
	"arrays":[
		Vector3Array(-1.0, 1.0, 1.0, -1.0, 0.714286, -1.0, -1.0, 0.714286, 1.0, -1.0, 1.0, -1.0, 1.0, 0.714286, -1.0, -1.0, 0.714286, -1.0, 1.0, 1.0, -1.0, 1.0, 0.714286, 1.0, 1.0, 0.714286, -1.0, 1.0, 1.0, 1.0, -1.0, 0.714286, 1.0, 1.0, 0.714286, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -0.714286, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -0.428571, 1.0, 0.831251, -0.356251, -0.831251, 1.0, -0.428571, -1.0, 1.0, -0.142857, 1.0, -1.0, -0.428571, 1.0, 1.0, -0.428571, 1.0, -1.0, -0.142857, -1.0, 0.831251, -0.11875, -0.831251, 1.0, -0.142857, -1.0, 1.0, 0.428571, 1.0, -1.0, 0.142857, 1.0, 1.0, 0.142857, 1.0, -1.0, 0.142857, -1.0, -0.831251, 0.11875, 0.831251, -1.0, 0.142857, 1.0, 1.0, -0.714286, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -0.714286, -1.0, 0.831251, -0.593751, 0.831251, 1.0, -0.714286, 1.0, 1.0, -0.142857, -1.0, 1.0, -0.428571, 1.0, 1.0, -0.428571, -1.0, 1.0, -0.428571, -1.0, -0.831251, -0.356251, -0.831251, -1.0, -0.428571, -1.0, 1.0, 0.428571, -1.0, 1.0, 0.142857, 1.0, 1.0, 0.142857, -1.0, -1.0, -0.142857, 1.0, -0.831251, -0.11875, -0.831251, -1.0, -0.142857, -1.0, -1.0, -0.714286, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.714286, 1.0, 0.831251, 0.593751, 0.831251, 1.0, 0.714286, 1.0, -1.0, -0.142857, -1.0, 1.0, -0.428571, -1.0, -1.0, -0.428571, -1.0, -1.0, -0.714286, -1.0, 0.831251, -0.593751, -0.831251, 1.0, -0.714286, -1.0, -1.0, 0.428571, -1.0, 1.0, 0.142857, -1.0, -1.0, 0.142857, -1.0, -1.0, -0.428571, -1.0, -0.831251, -0.356251, 0.831251, -1.0, -0.428571, 1.0, -1.0, -0.714286, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 0.428571, 1.0, -0.831251, 0.356251, 0.831251, -1.0, 0.428571, 1.0, -1.0, -0.142857, 1.0, -1.0, -0.428571, -1.0, -1.0, -0.428571, 1.0, 1.0, 0.714286, 1.0, 0.831251, 0.593751, -0.831251, 1.0, 0.714286, -1.0, -1.0, 0.428571, 1.0, -1.0, 0.142857, -1.0, -1.0, 0.142857, 1.0, -1.0, -0.714286, 1.0, -0.831251, -0.593751, -0.831251, -1.0, -0.714286, -1.0, -1.0, 0.428571, 1.0, -0.831251, 0.356251, -0.831251, -1.0, 0.428571, -1.0, 1.0, -0.714286, 1.0, -0.831251, -0.593751, 0.831251, -1.0, -0.714286, 1.0, 1.0, 0.142857, -1.0, -0.831251, 0.11875, -0.831251, -1.0, 0.142857, -1.0, 1.0, -0.142857, -1.0, 0.831251, -0.11875, 0.831251, 1.0, -0.142857, 1.0, -1.0, 0.714286, -1.0, -0.831251, 0.593751, 0.831251, -1.0, 0.714286, 1.0, -1.0, -0.428571, 1.0, 0.831251, -0.356251, 0.831251, 1.0, -0.428571, 1.0, -1.0, 0.428571, -1.0, 0.831251, 0.356251, -0.831251, 1.0, 0.428571, -1.0, 1.0, 0.142857, 1.0, 0.831251, 0.11875, -0.831251, 1.0, 0.142857, -1.0, 1.0, -0.142857, 1.0, -0.831251, -0.11875, 0.831251, -1.0, -0.142857, 1.0, 1.0, 0.714286, -1.0, -0.831251, 0.593751, -0.831251, -1.0, 0.714286, -1.0, 1.0, 0.428571, -1.0, 0.831251, 0.356251, 0.831251, 1.0, 0.428571, 1.0, -1.0, 0.142857, 1.0, 0.831251, 0.11875, 0.831251, 1.0, 0.142857, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -0.714286, 1.0, 1.0, -0.428571, 1.0, 0.831251, -0.356251, 0.831251, 0.831251, -0.356251, -0.831251, -1.0, -0.142857, 1.0, -1.0, -0.142857, -1.0, -0.831251, -0.11875, -0.831251, 0.831251, -0.11875, -0.831251, -1.0, 0.428571, 1.0, -1.0, 0.142857, -1.0, -0.831251, 0.11875, -0.831251, -0.831251, 0.11875, 0.831251, 1.0, -0.714286, 1.0, 1.0, -0.714286, -1.0, 0.831251, -0.593751, -0.831251, 0.831251, -0.593751, 0.831251, 1.0, -0.142857, 1.0, 1.0, -0.428571, -1.0, 0.831251, -0.356251, -0.831251, -0.831251, -0.356251, -0.831251, 1.0, 0.428571, 1.0, -1.0, -0.142857, 1.0, -0.831251, -0.11875, 0.831251, -0.831251, -0.11875, -0.831251, 1.0, -0.714286, -1.0, -1.0, 0.714286, 1.0, -0.831251, 0.593751, 0.831251, 0.831251, 0.593751, 0.831251, 1.0, -0.142857, -1.0, -1.0, -0.714286, -1.0, -0.831251, -0.593751, -0.831251, 0.831251, -0.593751, -0.831251, 1.0, 0.428571, -1.0, -1.0, -0.428571, -1.0, -0.831251, -0.356251, -0.831251, -0.831251, -0.356251, 0.831251, -1.0, -0.714286, -1.0, 1.0, 0.428571, 1.0, 0.831251, 0.356251, 0.831251, -0.831251, 0.356251, 0.831251, -1.0, -0.142857, -1.0, 1.0, 0.714286, 1.0, 0.831251, 0.593751, 0.831251, 0.831251, 0.593751, -0.831251, -1.0, 0.428571, -1.0, -1.0, -0.714286, 1.0, -0.831251, -0.593751, 0.831251, -0.831251, -0.593751, -0.831251, -1.0, 0.428571, 1.0, -0.831251, 0.356251, 0.831251, -0.831251, 0.356251, -0.831251, 1.0, -0.714286, 1.0, 0.831251, -0.593751, 0.831251, -0.831251, -0.593751, 0.831251, 1.0, 0.142857, -1.0, 0.831251, 0.11875, -0.831251, -0.831251, 0.11875, -0.831251, 1.0, -0.142857, -1.0, 0.831251, -0.11875, -0.831251, 0.831251, -0.11875, 0.831251, -1.0, 0.714286, -1.0, -0.831251, 0.593751, -0.831251, -0.831251, 0.593751, 0.831251, -1.0, -0.428571, 1.0, -0.831251, -0.356251, 0.831251, 0.831251, -0.356251, 0.831251, -1.0, 0.428571, -1.0, -0.831251, 0.356251, -0.831251, 0.831251, 0.356251, -0.831251, 1.0, 0.142857, 1.0, 0.831251, 0.11875, 0.831251, 0.831251, 0.11875, -0.831251, 1.0, -0.142857, 1.0, 0.831251, -0.11875, 0.831251, -0.831251, -0.11875, 0.831251, 1.0, 0.714286, -1.0, 0.831251, 0.593751, -0.831251, -0.831251, 0.593751, -0.831251, 1.0, 0.428571, -1.0, 0.831251, 0.356251, -0.831251, 0.831251, 0.356251, 0.831251, -1.0, 0.142857, 1.0, -0.831251, 0.11875, 0.831251, 0.831251, 0.11875, 0.831251),
		Vector3Array(-1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, -0.393919, -0.919145, 0.0, -0.393919, -0.919145, 0.0, -0.393919, -0.919145, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.98995, -0.141421, 0.0, 0.98995, -0.141421, 0.0, 0.98995, -0.141421, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, -0.141422, -0.989949, 0.0, -0.141422, -0.989949, 0.0, -0.141422, -0.989949, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.581238, 0.813733, 0.0, 0.581238, 0.813733, 0.0, 0.581238, 0.813733, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -0.919145, 0.393919, 0.0, -0.919145, 0.393919, 0.0, -0.919145, 0.393919, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -0.141421, 0.989949, 0.0, -0.141421, 0.989949, 0.0, -0.141421, 0.989949, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -0.813734, 0.581238, 0.0, -0.813734, 0.581238, 0.0, -0.813734, 0.581238, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.813734, -0.581238, 0.0, 0.813734, -0.581238, 0.0, 0.813734, -0.581238, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.393919, -0.919145, 0.0, 0.393919, -0.919145, 0.0, 0.393919, -0.919145, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.919145, -0.393919, 0.0, 0.919145, -0.393919, 0.0, 0.919145, -0.393919, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.581238, -0.813733, 0.0, 0.581238, -0.813733, 0.0, 0.581238, -0.813733, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -0.581238, 0.813733, 0.0, -0.581238, 0.813733, 0.0, -0.581238, 0.813733, 0.0, 0.393919, 0.919145, 0.0, 0.393919, 0.919145, 0.0, 0.393919, 0.919145, 0.0, 0.0, 0.813734, 0.581238, 0.0, 0.813734, 0.581238, 0.0, 0.813734, 0.581238, 0.0, -0.989949, -0.141421, 0.0, -0.989949, -0.141421, 0.0, -0.989949, -0.141421, 0.141421, 0.989949, 0.0, 0.141421, 0.989949, 0.0, 0.141421, 0.989949, 0.0, -0.581238, -0.813733, 0.0, -0.581238, -0.813733, 0.0, -0.581238, -0.813733, 0.0, 0.0, -0.919145, -0.393919, 0.0, -0.919145, -0.393919, 0.0, -0.919145, -0.393919, 0.0, 0.919145, 0.393919, 0.0, 0.919145, 0.393919, 0.0, 0.919145, 0.393919, 0.141422, -0.989949, 0.0, 0.141422, -0.989949, 0.0, 0.141422, -0.989949, 0.0, 0.0, 0.98995, 0.141421, 0.0, 0.98995, 0.141421, 0.0, 0.98995, 0.141421, 0.0, -0.813734, -0.581238, 0.0, -0.813734, -0.581238, 0.0, -0.813734, -0.581238, -0.393919, 0.919145, 0.0, -0.393919, 0.919145, 0.0, -0.393919, 0.919145, 0.0, 0.0, -0.989949, 0.141421, 0.0, -0.989949, 0.141421, 0.0, -0.989949, 0.141421, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.393919, -0.919145, 0.0, -0.393919, -0.919145, 0.0, -0.393919, -0.919145, 0.0, 0.0, 0.0, 1.0, 0.0, 0.989949, -0.141421, 0.0, 0.989949, -0.141421, 0.0, 0.989949, -0.141421, 0.0, 0.0, 1.0, -0.141421, -0.98995, 0.0, -0.141421, -0.98995, 0.0, -0.141421, -0.98995, 0.0, 1.0, 0.0, 0.0, 0.581238, 0.813734, 0.0, 0.581238, 0.813734, 0.0, 0.581238, 0.813734, 0.0, 1.0, 0.0, 0.0, 0.0, -0.919145, 0.39392, 0.0, -0.919145, 0.39392, 0.0, -0.919145, 0.39392, 1.0, 0.0, 0.0, -0.141421, 0.98995, 0.0, -0.141421, 0.98995, 0.0, -0.141421, 0.98995, 0.0, 0.0, 0.0, -1.0, 0.0, -0.813733, 0.581238, 0.0, -0.813733, 0.581238, 0.0, -0.813733, 0.581238, 0.0, 0.0, -1.0, 0.0, 0.813733, -0.581238, 0.0, 0.813733, -0.581238, 0.0, 0.813733, -0.581238, 0.0, 0.0, -1.0, 0.393919, -0.919145, 0.0, 0.393919, -0.919145, 0.0, 0.393919, -0.919145, 0.0, -1.0, 0.0, 0.0, 0.0, 0.919145, -0.39392, 0.0, 0.919145, -0.39392, 0.0, 0.919145, -0.39392, -1.0, 0.0, 0.0, 0.581238, -0.813734, 0.0, 0.581238, -0.813734, 0.0, 0.581238, -0.813734, 0.0, -1.0, 0.0, 0.0, -0.581238, 0.813734, 0.0, -0.581238, 0.813734, 0.0, -0.581238, 0.813734, 0.0, 0.393919, 0.919145, 0.0, 0.393919, 0.919145, 0.0, 0.393919, 0.919145, 0.0, 0.0, 0.813733, 0.581238, 0.0, 0.813733, 0.581238, 0.0, 0.813733, 0.581238, 0.0, -0.989949, -0.141421, 0.0, -0.989949, -0.141421, 0.0, -0.989949, -0.141421, 0.141421, 0.98995, 0.0, 0.141421, 0.98995, 0.0, 0.141421, 0.98995, 0.0, -0.581238, -0.813734, 0.0, -0.581238, -0.813734, 0.0, -0.581238, -0.813734, 0.0, 0.0, -0.919145, -0.39392, 0.0, -0.919145, -0.39392, 0.0, -0.919145, -0.39392, 0.0, 0.919145, 0.39392, 0.0, 0.919145, 0.39392, 0.0, 0.919145, 0.39392, 0.141421, -0.98995, 0.0, 0.141421, -0.98995, 0.0, 0.141421, -0.98995, 0.0, 0.0, 0.989949, 0.141421, 0.0, 0.989949, 0.141421, 0.0, 0.989949, 0.141421, 0.0, -0.813733, -0.581238, 0.0, -0.813733, -0.581238, 0.0, -0.813733, -0.581238, -0.393919, 0.919145, 0.0, -0.393919, 0.919145, 0.0, -0.393919, 0.919145, 0.0, 0.0, -0.989949, 0.141421, 0.0, -0.989949, 0.141421, 0.0, -0.989949, 0.141421),
		FloatArray(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.625, 1.0, 0.589286, 0.75, 0.589286, 1.0, 0.625, 0.75, 0.589286, 0.5, 0.589286, 0.75, 0.625, 0.5, 0.589286, 0.25, 0.589286, 0.5, 0.625, 0.25, 0.589286, 0.0, 0.589286, 0.25, 0.375, 0.5, 0.125, 0.25, 0.125, 0.5, 0.875, 0.5, 0.625, 0.25, 0.625, 0.5, 0.410714, 0.25, 0.375, 0.0, 0.375, 0.25, 0.446429, 0.25, 0.446429, 0.5, 0.446429, 0.5, 0.482143, 0.25, 0.446429, 0.0, 0.446429, 0.25, 0.482143, 0.75, 0.482143, 0.5, 0.482143, 0.5, 0.553571, 0.25, 0.517857, 0.0, 0.517857, 0.25, 0.517857, 0.75, 0.517857, 1.0, 0.517857, 1.0, 0.410714, 0.5, 0.375, 0.25, 0.375, 0.5, 0.410714, 0.5, 0.410714, 0.25, 0.410714, 0.25, 0.482143, 0.5, 0.446429, 0.25, 0.446429, 0.5, 0.446429, 0.5, 0.446429, 0.75, 0.446429, 0.75, 0.553571, 0.5, 0.517857, 0.25, 0.517857, 0.5, 0.482143, 1.0, 0.482143, 0.75, 0.482143, 0.75, 0.410714, 0.75, 0.375, 0.5, 0.375, 0.75, 0.589286, 0.0, 0.589286, 0.25, 0.589286, 0.25, 0.482143, 0.75, 0.446429, 0.5, 0.446429, 0.75, 0.410714, 0.75, 0.410714, 0.5, 0.410714, 0.5, 0.553571, 0.75, 0.517857, 0.5, 0.517857, 0.75, 0.446429, 0.75, 0.446429, 1.0, 0.446429, 1.0, 0.410714, 1.0, 0.375, 0.75, 0.375, 1.0, 0.553571, 0.25, 0.553571, 0.0, 0.553571, 0.0, 0.482143, 1.0, 0.446429, 0.75, 0.446429, 1.0, 0.589286, 0.25, 0.589286, 0.5, 0.589286, 0.5, 0.553571, 1.0, 0.517857, 0.75, 0.517857, 1.0, 0.410714, 1.0, 0.410714, 0.75, 0.410714, 0.75, 0.553571, 1.0, 0.553571, 0.75, 0.553571, 0.75, 0.410714, 0.25, 0.410714, 0.0, 0.410714, 0.0, 0.517857, 0.5, 0.517857, 0.75, 0.517857, 0.75, 0.482143, 0.5, 0.482143, 0.25, 0.482143, 0.25, 0.589286, 0.75, 0.589286, 1.0, 0.589286, 1.0, 0.446429, 0.0, 0.446429, 0.25, 0.446429, 0.25, 0.553571, 0.75, 0.553571, 0.5, 0.553571, 0.5, 0.517857, 0.25, 0.517857, 0.5, 0.517857, 0.5, 0.482143, 0.25, 0.482143, 0.0, 0.482143, 0.0, 0.589286, 0.5, 0.589286, 0.75, 0.589286, 0.75, 0.553571, 0.5, 0.553571, 0.25, 0.553571, 0.25, 0.517857, 0.0, 0.517857, 0.25, 0.517857, 0.25, 0.625, 0.75, 0.625, 0.5, 0.625, 0.25, 0.625, 0.0, 0.375, 0.25, 0.875, 0.25, 0.410714, 0.0, 0.446429, 0.25, 0.446429, 0.25, 0.446429, 0.5, 0.482143, 0.0, 0.482143, 0.75, 0.482143, 0.75, 0.482143, 0.5, 0.553571, 0.0, 0.517857, 0.75, 0.517857, 0.75, 0.517857, 1.0, 0.410714, 0.25, 0.410714, 0.5, 0.410714, 0.5, 0.410714, 0.25, 0.482143, 0.25, 0.446429, 0.5, 0.446429, 0.5, 0.446429, 0.75, 0.553571, 0.25, 0.482143, 1.0, 0.482143, 1.0, 0.482143, 0.75, 0.410714, 0.5, 0.589286, 0.0, 0.589286, 0.0, 0.589286, 0.25, 0.482143, 0.5, 0.410714, 0.75, 0.410714, 0.75, 0.410714, 0.5, 0.553571, 0.5, 0.446429, 0.75, 0.446429, 0.75, 0.446429, 1.0, 0.410714, 0.75, 0.553571, 0.25, 0.553571, 0.25, 0.553571, 0.0, 0.482143, 0.75, 0.589286, 0.25, 0.589286, 0.25, 0.589286, 0.5, 0.553571, 0.75, 0.410714, 1.0, 0.410714, 1.0, 0.410714, 0.75, 0.553571, 1.0, 0.553571, 1.0, 0.553571, 0.75, 0.410714, 0.25, 0.410714, 0.25, 0.410714, 0.0, 0.517857, 0.5, 0.517857, 0.5, 0.517857, 0.75, 0.482143, 0.5, 0.482143, 0.5, 0.482143, 0.25, 0.589286, 0.75, 0.589286, 0.75, 0.589286, 1.0, 0.446429, 0.0, 0.446429, 0.0, 0.446429, 0.25, 0.553571, 0.75, 0.553571, 0.75, 0.553571, 0.5, 0.517857, 0.25, 0.517857, 0.25, 0.517857, 0.5, 0.482143, 0.25, 0.482143, 0.25, 0.482143, 0.0, 0.589286, 0.5, 0.589286, 0.5, 0.589286, 0.75, 0.553571, 0.5, 0.553571, 0.5, 0.553571, 0.25, 0.517857, 0.0, 0.517857, 0.0, 0.517857, 0.25),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 9, 11, 10, 12, 14, 13, 15, 17, 16, 18, 20, 19, 21, 23, 22, 24, 26, 25, 27, 29, 28, 30, 32, 31, 33, 35, 34, 36, 38, 37, 39, 41, 40, 42, 44, 43, 45, 47, 46, 48, 50, 49, 51, 53, 52, 54, 56, 55, 57, 59, 58, 60, 62, 61, 63, 65, 64, 66, 68, 67, 69, 71, 70, 72, 74, 73, 75, 77, 76, 78, 80, 79, 81, 83, 82, 84, 86, 85, 87, 89, 88, 90, 92, 91, 93, 95, 94, 96, 98, 97, 99, 101, 100, 102, 104, 103, 105, 107, 106, 108, 110, 109, 111, 113, 112, 114, 116, 115, 117, 119, 118, 120, 122, 121, 123, 125, 124, 0, 1, 126, 3, 4, 127, 6, 7, 128, 9, 10, 129, 12, 13, 130, 15, 16, 131, 18, 19, 132, 133, 135, 134, 24, 25, 136, 137, 139, 138, 30, 31, 140, 141, 143, 142, 36, 37, 144, 145, 147, 146, 42, 43, 148, 149, 151, 150, 48, 49, 152, 153, 155, 154, 54, 55, 156, 157, 159, 158, 60, 61, 160, 161, 163, 162, 66, 67, 164, 165, 167, 166, 72, 73, 168, 169, 171, 170, 78, 79, 172, 173, 175, 174, 84, 85, 176, 177, 179, 178, 180, 182, 181, 183, 185, 184, 186, 188, 187, 189, 191, 190, 192, 194, 193, 195, 197, 196, 198, 200, 199, 201, 203, 202, 204, 206, 205, 207, 209, 208, 210, 212, 211, 213, 215, 214)
	],
	"morph_arrays":[]
}
surfaces/1 = {
	"material":SubResource(4),
	"primitive":4,
	"arrays":[
		Vector3Array(0.831251, -0.356251, 0.831251, -0.831251, -0.593751, 0.831251, 0.831251, -0.593751, 0.831251, 0.831251, 0.11875, 0.831251, -0.831251, -0.11875, 0.831251, 0.831251, -0.11875, 0.831251, 0.831251, 0.593751, 0.831251, -0.831251, 0.356251, 0.831251, 0.831251, 0.356251, 0.831251, 0.831251, -0.356251, -0.831251, 0.831251, -0.593751, 0.831251, 0.831251, -0.593751, -0.831251, 0.831251, 0.11875, -0.831251, 0.831251, -0.11875, 0.831251, 0.831251, -0.11875, -0.831251, 0.831251, 0.593751, -0.831251, 0.831251, 0.356251, 0.831251, 0.831251, 0.356251, -0.831251, -0.831251, -0.356251, -0.831251, 0.831251, -0.593751, -0.831251, -0.831251, -0.593751, -0.831251, -0.831251, 0.11875, -0.831251, 0.831251, -0.11875, -0.831251, -0.831251, -0.11875, -0.831251, -0.831251, 0.593751, -0.831251, 0.831251, 0.356251, -0.831251, -0.831251, 0.356251, -0.831251, -0.831251, -0.356251, 0.831251, -0.831251, -0.593751, -0.831251, -0.831251, -0.593751, 0.831251, -0.831251, 0.11875, 0.831251, -0.831251, -0.11875, -0.831251, -0.831251, -0.11875, 0.831251, -0.831251, 0.593751, 0.831251, -0.831251, 0.356251, -0.831251, -0.831251, 0.356251, 0.831251, -0.831251, -0.356251, 0.831251, -0.831251, 0.11875, 0.831251, -0.831251, 0.593751, 0.831251, 0.831251, -0.356251, 0.831251, 0.831251, 0.11875, 0.831251, 0.831251, 0.593751, 0.831251, 0.831251, -0.356251, -0.831251, 0.831251, 0.11875, -0.831251, 0.831251, 0.593751, -0.831251, -0.831251, -0.356251, -0.831251, -0.831251, 0.11875, -0.831251, -0.831251, 0.593751, -0.831251),
		Vector3Array(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0),
		FloatArray(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.446429, 0.25, 0.410714, 0.0, 0.410714, 0.25, 0.517857, 0.25, 0.482143, 0.0, 0.482143, 0.25, 0.589286, 0.25, 0.553571, 0.0, 0.553571, 0.25, 0.446429, 0.5, 0.410714, 0.25, 0.410714, 0.5, 0.517857, 0.5, 0.482143, 0.25, 0.482143, 0.5, 0.589286, 0.5, 0.553571, 0.25, 0.553571, 0.5, 0.446429, 0.75, 0.410714, 0.5, 0.410714, 0.75, 0.517857, 0.75, 0.482143, 0.5, 0.482143, 0.75, 0.589286, 0.75, 0.553571, 0.5, 0.553571, 0.75, 0.446429, 1.0, 0.410714, 0.75, 0.410714, 1.0, 0.517857, 1.0, 0.482143, 0.75, 0.482143, 1.0, 0.589286, 1.0, 0.553571, 0.75, 0.553571, 1.0, 0.446429, 0.0, 0.517857, 0.0, 0.589286, 0.0, 0.446429, 0.25, 0.517857, 0.25, 0.589286, 0.25, 0.446429, 0.5, 0.517857, 0.5, 0.589286, 0.5, 0.446429, 0.75, 0.517857, 0.75, 0.589286, 0.75),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 9, 11, 10, 12, 14, 13, 15, 17, 16, 18, 20, 19, 21, 23, 22, 24, 26, 25, 27, 29, 28, 30, 32, 31, 33, 35, 34, 0, 1, 36, 3, 4, 37, 6, 7, 38, 9, 10, 39, 12, 13, 40, 15, 16, 41, 18, 19, 42, 21, 22, 43, 24, 25, 44, 27, 28, 45, 30, 31, 46, 33, 34, 47)
	],
	"morph_arrays":[]
}

[node type="Spatial" name="Scene"]

[node name="Cube" type="MeshInstance" parent="."]

mesh = SubResource(5)
visible = true
transform = Transform(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)
